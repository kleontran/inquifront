{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/hacker/Documents/INQUI/inquilino-perfecto/inquilino-front/src/Login/Reset.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport \"./Login.css\";\n\nfunction Reset() {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState();\n  const [sent, setSent] = useState(false);\n  const {\n    code\n  } = useParams();\n  const history = useHistory();\n\n  const handleReset = async e => {\n    e.preventDefault();\n    const res = await fetch(\"http://localhost:8080/api/v1/user/password/reset/\" + code, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password\n      }),\n      method: \"PUT\"\n    });\n    setPassword(\"\");\n\n    if (res.ok) {\n      history.push(\"/\");\n      setSent(!sent);\n    } else {\n      setError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resetContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cambia tu contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resetContent\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleReset,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Introduce tu nueva contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          placeholder: \"Nueva contrase\\xF1a\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Error en el reseteo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), !sent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pikachuRunning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), sent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pikachuSent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Reset, \"n7RzsLE2nvioA/7GqcfhagqtqAI=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Reset;\nexport default Reset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["/home/hacker/Documents/INQUI/inquilino-perfecto/inquilino-front/src/Login/Reset.js"],"names":["useState","useHistory","useParams","Reset","password","setPassword","error","setError","sent","setSent","code","history","handleReset","e","preventDefault","res","fetch","headers","body","JSON","stringify","method","ok","push","target","value"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAO,aAAP;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAAWR,SAAS,EAA1B;AAEA,QAAMS,OAAO,GAAGV,UAAU,EAA1B;;AAEA,QAAMW,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,sDAAsDN,IADjC,EAErB;AACEO,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OADX;AAEEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEhB,QAAAA;AAAF,OAAf,CAFR;AAGEiB,MAAAA,MAAM,EAAE;AAHV,KAFqB,CAAvB;AAQAhB,IAAAA,WAAW,CAAC,EAAD,CAAX;;AACA,QAAIU,GAAG,CAACO,EAAR,EAAY;AACVX,MAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACAd,MAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,KAHD,MAGO;AACLD,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEK,WAAhB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,WAAW,EAAC,qBAFd;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,KAAK,EAAER,QAJT;AAKE,UAAA,QAAQ,EAAGS,CAAD,IAAOR,WAAW,CAACQ,CAAC,CAACW,MAAF,CAASC,KAAV,CAL9B;AAME,UAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,gBAFF,EAUGnB,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVZ,eAWE;AAAA;AAAA;AAAA;AAAA,gBAXF,EAYG,CAACE,IAAD,iBAAS;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAZZ,EAaGA,IAAI,iBAAI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAbX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAlDQL,K;UAKUD,S,EAEDD,U;;;KAPTE,K;AAoDT,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport \"./Login.css\";\n\nfunction Reset() {\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState();\n  const [sent, setSent] = useState(false);\n\n  const { code } = useParams();\n\n  const history = useHistory();\n\n  const handleReset = async (e) => {\n    e.preventDefault();\n    const res = await fetch(\n      \"http://localhost:8080/api/v1/user/password/reset/\" + code,\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ password }),\n        method: \"PUT\",\n      }\n    );\n    setPassword(\"\");\n    if (res.ok) {\n      history.push(\"/\");\n      setSent(!sent);\n    } else {\n      setError(true);\n    }\n  };\n\n  return (\n    <div className=\"resetContainer\">\n      <h1>Cambia tu contraseña</h1>\n      <div className=\"resetContent\">\n        <form onSubmit={handleReset}>\n          <h1>Introduce tu nueva contraseña</h1>\n          <input\n            name=\"password\"\n            placeholder=\"Nueva contraseña\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          {error && <div>Error en el reseteo</div>}\n          <button />\n          {!sent && <div className=\"pikachuRunning\" />}\n          {sent && <div className=\"pikachuSent\" />}\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Reset;\n"]},"metadata":{},"sourceType":"module"}