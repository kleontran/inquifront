{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/hacker/Desktop/1inqui/Inquilino-Perfecto/inquilino-front/src/Login/Reset.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport './Login.css';\n\nfunction Reset() {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState();\n  const [sent, setSent] = useState(false);\n  const {\n    code\n  } = useParams();\n  const history = useHistory();\n\n  const handleReset = async e => {\n    e.preventDefault();\n    const res = await fetch('http://localhost:9999/usuario/password/reset/' + code, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        password\n      }),\n      method: 'PUT'\n    });\n    setPassword('');\n\n    if (res.ok) {\n      history.push('/');\n      setSent(!sent);\n    } else {\n      setError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resetContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cambia tu contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resetContent\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleReset,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Introduce tu nueva contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          placeholder: \"Nueva contrase\\xF1a\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Error en el reseteo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), !sent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pikachuRunning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), sent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pikachuSent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Reset, \"xR7Qdg9z69niXo8P4DfPnPZdWC8=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Reset;\nexport default Reset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["/home/hacker/Desktop/1inqui/Inquilino-Perfecto/inquilino-front/src/Login/Reset.js"],"names":["useState","useHistory","useParams","Reset","password","setPassword","error","setError","sent","setSent","code","history","handleReset","e","preventDefault","res","fetch","headers","body","JSON","stringify","method","ok","push","target","value"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAO,aAAP;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAAWR,SAAS,EAA1B;AAEA,QAAMS,OAAO,GAAGV,UAAU,EAA1B;;AAEA,QAAMW,WAAW,GAAG,MAAMC,CAAN,IAAW;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kDAAkDN,IAAnD,EAAyD;AAC5EO,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OADmE;AAE5EC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEhB,QAAAA;AAAF,OAAf,CAFsE;AAG5EiB,MAAAA,MAAM,EAAE;AAHoE,KAAzD,CAAvB;AAKAhB,IAAAA,WAAW,CAAC,EAAD,CAAX;;AACA,QAAIU,GAAG,CAACO,EAAR,EAAY;AACRX,MAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACAd,MAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACH,KAHD,MAGO;AACHD,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,GAdD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEK,WAAhB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,WAAW,EAAC,qBAAnC;AAAsD,UAAA,IAAI,EAAC,UAA3D;AAAsE,UAAA,KAAK,EAAER,QAA7E;AAAuF,UAAA,QAAQ,EAAES,CAAC,IAAIR,WAAW,CAACQ,CAAC,CAACW,MAAF,CAASC,KAAV,CAAjH;AAAmI,UAAA,QAAQ;AAA3I;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGKnB,KAAK,iBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJR,eAMI;AAAA;AAAA;AAAA;AAAA,gBANJ,EAOK,CAACE,IAAD,iBACG;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBARR,EAUKA,IAAI,iBACD;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA9CQL,K;UAKYD,S,EAEDD,U;;;KAPXE,K;AAgDT,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport './Login.css'\n\nfunction Reset() {\n    const [password, setPassword] = useState('')\n    const [error, setError] = useState()\n    const [sent, setSent] = useState(false)\n\n    const { code } = useParams()\n\n    const history = useHistory()\n\n    const handleReset = async e => {\n        e.preventDefault()\n        const res = await fetch('http://localhost:9999/usuario/password/reset/' + code, {\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ password }),\n            method: 'PUT'\n        })\n        setPassword('')\n        if (res.ok) {\n            history.push('/')\n            setSent(!sent)\n        } else {\n            setError(true)\n        }\n    }\n\n    return (\n        <div className='resetContainer'>\n            <h1>Cambia tu contraseña</h1>\n            <div className='resetContent'>\n                <form onSubmit={handleReset}>\n                    <h1>Introduce tu nueva contraseña</h1>\n                    <input name='password' placeholder='Nueva contraseña' type='password' value={password} onChange={e => setPassword(e.target.value)} required />\n                    {error &&\n                        <div>Error en el reseteo</div>\n                    }\n                    <button />\n                    {!sent &&\n                        <div className='pikachuRunning' />\n                    }\n                    {sent &&\n                        <div className='pikachuSent' />\n                    }\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Reset"]},"metadata":{},"sourceType":"module"}